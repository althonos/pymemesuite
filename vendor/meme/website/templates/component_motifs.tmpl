<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Motif Input Template</title>
    <link href="../doc/css/style.css" rel="stylesheet" type="text/css">
    <link href="../css/component_motifs.css" rel="stylesheet" type="text/css">
    <script src="../doc/js/utilities.js"></script>
    <script src="../doc/js/motif_logo.js"></script>
    <script src="../js/site.js"></script>
    <script src="../js/alphabet_parser.js"></script>
    <script src="../js/motif_parser.js"></script>
    <script src="../js/component_motifs.js"></script>
    <script>
      var XXXXoptionsXXXX = {
        "alph_type": "ANY_ALPHABET"
      };
      function XXXXregister_componentXXXX(id, element, controler) {
      }
    </script>
  </head>
  <body>
    <div class="pop_content" id="pop_${prefix}">
      <p>Information about the motif field would be displayed here.</p>
      <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
    </div>
    <!--{help}-->
    <div class="pop_content" style="width:400px;" id="pop_input_motifs">
      <p><b>Click on the menu at the left to see which of the following motif input methods are available.</b></p>
      <dl>
        <dt><b>Type in motifs</b></dt>
        <dd>When this option is available you may directly input multiple motifs
        by typing them (or using "cut-and-paste").&ensp;
        First select the desired motif alphabet using the menu 
        immediately to the left. If you select the &quot;Custom&quot; option then
        you must provide an <a href="../doc/alphabet-format.html">alphabet definition</a>
        in the file input that immediately follows.&ensp;Warning: custom alphabets are <i>case-sensitive</i>.&ensp;
        You may optionally give each motif an identifier and alternate name by
        inputting a line like <span class="example">&gt;Identifer Alternate-Name</span> preceeding the motif.&ensp;
        You can then enter each motif as either <a 
        href="javascript:help_popup(help_popup.activator, 'pop_input_motifs_text_matrix')"
        >matrices</a>, <a 
        href="javascript:help_popup(help_popup.activator, 'pop_input_motifs_text_sites')"
        >sequence sites</a> or <a
        href="javascript:help_popup(help_popup.activator, 'pop_input_motifs_text_sites')"
        >regular expressions</a>.&ensp;
        You can enter multiple motifs by typing an empty line after each motif.&ensp;
        Individual motifs will be shown in square brackets, and errors in your
        motifs will be highlighted in red while warnings will be highlighted in
        yellow.&ensp;
        Mouse-over individual motifs to display their sequence logos.&ensp;
        View the <a href="javascript:help_popup(help_popup.activator, 'pop_input_motifs_examples')"
        >examples</a> for more information on what is possible.</dd>
        <dt><b>Upload motifs</b></dt>
        <dd>When this option is available you may upload a file containing
        motifs in MEME motif format.&ensp; This includes the outputs generated by MEME
        and DREME, as well as files you create using the 
        <a href="../doc/motif_conversion.html">motif conversion scripts</a>
        or manually following the 
        <a href="../doc/meme-format.html">MEME motif format</a> guidelines.</dd>
        <dt><b>Databases (select category)</b></dt>
        <dd>When this option is available you can select the category of
        motif database desired from the list below it. Then select the motif
        database from the displayed list.&ensp;
        Consult the 
        <a href="../db/motifs">motif database documentation</a> 
        for descriptions of all the motif databases present on this MEME Suite server.
        <dt><b>Submitted motifs</b></dt>
        <dd>This option is only available when you have invoked the current
        program by clicking on a button in the output report of a different MEME Suite program.&ensp;
        By selecting this option you will input the motifs sent by that program.</dd>
      </dl>
      <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
    </div>
    <div class="pop_content" style="width:500px;" id="pop_input_motifs_text_matrix">
      <a href="javascript:help_popup(help_popup.activator, 'pop_input_motifs')">&lt;&lt; back to overview</a>
      <h4>Typed Motifs - Matrices</h4>
      <p>You may input both probability and count matrices of either orientation
      and the rules described below will be used to convert the matrix into a
      MEME formatted motif.</p>
      <h4>Alphabet Order</h4>
      <p>The counts/probabilities are expected to be ordered based on the 
      alphabetical ordering of their codes.&ensp; So DNA is ordered ACGT and
      protein is ordered ACDEFGHIKLMNPQRSTVWY. For custom alphabets the ordering
      goes uppercase letters (A-Z), lowercase letters (a-z), numbers (0-9) and
      finally the symbols '*', '-' and '.'.</p>
      <h4>Matrix Orientation</h4>
      <p>Matrix motifs may be input with either one position per row (preferred)
      which is called row orientation, or one position per column which is
      called column orientation.&ensp; The orientation is determined by picking
      which dimension (row or column) is equal to the alphabet size.&ensp; If both
      dimensions are equal to the alphabet size then row orientation is assumed.&ensp;
      If neither dimension is equal to the alphabet size then the closest
      that is still smaller than the alphabet size is picked, however if both
      are equally smaller then column orientation is assumed.&ensp; Finally if none of
      the above rules work to determine the orientation then row orientation is
      assumed.</p>
      <h4>Site counts</h4>
      <p>Once the orientation is determined, the sum of the numbers that make up
      the first position is calculated and rounded to the nearest integer.&ensp; 
      If that value is larger than 1 then the matrix is assumed to be a count
      matrix and that value is used as the site count, otherwise the matrix is
      assumed to be a probability matrix and a site count of 20 is used.</p>
      <h4>Converting to a normalized probability matrix</h4>
      <p>Once the orientation is determined then each number in the matrix is
      converted to a normalized probability by dividing by the sum of all the
      numbers for that motif position.&ensp; If any numbers are missing they are 
      assumed to have the value zero.&ensp; As a special case if all numbers in a
      motif position have the value zero then they are given the uniform
      probability of 1 / <span class="pdat">alphabet size</span>.</p>
      <h4>Yellow highlighting and red annotations</h4>
      <p>Red asterisks (<span style='color:red'>*</span>) indicate where the
      parser thinks values are missing.&ensp; A yellow highlighted row or column
      with a red number at the end indicates that the counts for that position
      don't sum to the same count as the first position. The red number shows
      the difference. If the red number is negative then that position sums to
      less then the first position, if it is positive then it sums to more than
      the first position.</p>
      <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
    </div>
    <div class="pop_content" style="width:400px;" id="pop_input_motifs_text_sites">
      <a href="javascript:help_popup(help_popup.activator, 'pop_input_motifs')">&lt;&lt; back to overview</a>
      <h4>Typed Motifs - Sequence Sites or Regular Expressions</h4>
      <p>You may input one or more sites of the motif including using ambiguity
      codes or bracket expressions to represent multiple possibilities for a
      single motif position.</p>
      <h4>Ambiguity Codes</h4>
      <p>The <a href="javascript:help_popup(help_popup.activator, 'pop_input_motifs_dna_alphabet')"
      >DNA</a> and <a href="javascript:help_popup(help_popup.activator, 'pop_input_motifs_protein_alphabet')"
      >protein</a> alphabets include additional codes that represent
      multiple possible bases. For example the DNA alphabet includes W (for weak)
      which represents that the given position could be either a A (for adenosine)
      or a T (for thymidine).</p>
      <h4>Bracket Expressions</h4>
      <p>Bracket expressions also group together multiple codes so they share 
      a single position.&ensp; Their syntax is a opening square bracket '[' followed
      by one or more codes and a closing square bracket ']'. For example with a
      DNA motif the bracket expression [AT] means that both A and T are
      acceptable and is equivalent to the ambiguity code W.&ensp; Any repeats of a
      base in a bracket expression are ignored so for example a DNA bracket
      expression [AAT] has the same effect as [AT] or [AW] or W.</p>
      <h4>Multiple sites</h4>
      <p>When only one site is provided the site count is set to 20, however
      you can precisely control the motif by providing multiple sites.&ensp; Each of
      these sites can still contain ambiguity codes and bracket expressions
      but a single count will be divided among the selected bases for each
      position.&ensp; When multiple sites are provided the site count will be set
      to the number of sites provided.</p>
      <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
    </div>

    <div class="pop_content" style="width:400px;" id="pop_input_motifs_dna_alphabet">
      <a href="javascript:help_popup(help_popup.activator, 'pop_input_motifs_text_sites')"
      >&lt;&lt; back to sequence site motifs</a>
      <h4>DNA Alphabet</h4>
      <p>DNA motifs support the standard 4 codes for the bases: adenosine (A), 
      cytidine (C), guanosine (G) and thymidine (T) as well as supporting
      the following ambiguity codes.</p>
      <table>
        <tr><th>Description</th><th>Code</th><th>Bases</th></tr>
        <tr><td><b>U</b>racil</td><td>U</td><td>T</td></tr>
        <tr><td><b>W</b>eak</td><td>W</td><td>A, T</td></tr>
        <tr><td><b>S</b>trong</td><td>S</td><td>C, G</td></tr>
        <tr><td>A<b>m</b>ino</td><td>M</td><td>A, C</td></tr>
        <tr><td><b>K</b>eto</td><td>K</td><td>G, T</td></tr>
        <tr><td>Pu<b>r</b>ine</td><td>R</td><td>A, G</td></tr>
        <tr><td>P<b>y</b>rimidine</td><td>Y</td><td>C, T</td></tr>
        <tr><td>Not A</td><td>B</td><td>C, G, T</td></tr>
        <tr><td>Not C</td><td>D</td><td>A, G, T</td></tr>
        <tr><td>Not G</td><td>H</td><td>A, C, T</td></tr>
        <tr><td>Not T</td><td>V</td><td>A, C, G</td></tr>
        <tr><td>Any</td><td>N</td><td>A,&nbsp;C,&nbsp;G,&nbsp;T</td></tr>
      </table>
      <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
    </div>
    <div class="pop_content" style="width:400px;" id="pop_input_motifs_protein_alphabet">
      <a href="javascript:help_popup(help_popup.activator, 'pop_input_motifs_text_sites')"
      >&lt;&lt; back to sequence site motifs</a>
      <h4>Protein Alphabet</h4>
      <p>Protein motifs support the standard 20 codes for the amino acids: 
      Alanine (A), Arginine (R), Asparagine (N), Aspartic acid (D), Cysteine (C),
      Glutamic acid (E), Glutamine (Q), Glycine (G), Histidine (H), Isoleucine (I),
      Leucine (L), Lysine (K), Methionine (M), Phenylalanine (F), Proline (P),
      Serine (S), Threonine (T), Tryptophan (W), Tyrosine (Y) and Valine (V)
      as well as supporting the following ambiguity codes.</p>
      <table>
        <tr><th>Description</th><th>Code</th><th>Bases</th></tr>
        <tr><td>Asparagine or aspartic&nbsp;acid</td><td>B</td><td>N, D</td></tr>
        <tr><td>Glutamine or glutamic&nbsp;acid</td><td>Z</td><td>E, Q</td></tr>
        <tr><td>Leucine or Isoleucine</td><td>J</td><td>I, L</td></tr>
        <tr><td>Unspecified or unknown amino acid</td><td>X</td><td>A, C, D, E, 
        F, G, H, I, K, L, M, N, P, Q, R, S, T, V, W, Y</td></tr>
      </table>
      <p>Note that the two amino acids Selenocysteine (U) and Pyrrolysine (O)
      are not supported by the MEME Suite.</p>
      <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
    </div>
    <div class="pop_content" style="width:400px;" id="pop_input_motifs_examples">
      <a href="javascript:help_popup(help_popup.activator, 'pop_input_motifs')">&lt;&lt; back to overview</a>
      <h4>Typed Motifs - Examples</h4>
      <p>Single site motif using ambiguity codes N and R or bracket expressions.
      These give an approximation of the other motifs below.</p>
      <div>
        <textarea rows="1" cols="10" readonly>NTRGGTCAN</textarea> or 
        <textarea rows="1" cols="22" readonly>[ACGT]T[AG]GGTCA[ACGT]</textarea>
      </div>
      <p>Multiple site motif. This lists all 28 sites and gives the same result as the count matrix below.</p>
      <div>
        <textarea cols="10" readonly>CTAGGTCAT
ATAGGTCAC
GTAGGTCAC
GTAGGGCAC
GTAGGGCAC
GTGGGTCAC
GTAGGTCAC
GTAGGTCAC
TTGGGTCAC
CTAGGTCAT
CTAGGTCAT
CTAGGTCAT
CTGGGTCAC
ATAGGTCAG
GTAGGTCAA
GTAGGTGAG
ATGGGTCAC
GTAGGTCAG
GTGGGTGAA
GTAGGGCAC
CTGGGTCAC
TTGGGTCAC
CTAGGTCAC
GAAGGTGAC
GTAGGTAAA
GTAGGTCAA
CAGCAGCTG
TAGGTCACA</textarea>
      </div>
      <p>Count matrix motif showing row and column orientations.</p>
      <div>
        <textarea rows="9" cols="11" readonly> 3  8 14  3
 3  0  0 25
19  0  9  0
 0  1 27  0
 1  0 26  1
 0  1  4 23
 2 23  3  0
26  1  0  1
 5 15  4  4</textarea>
        or
        <textarea rows="4" cols="26" readonly> 3  3 19  0  1  0  2 26  5
 8  0  0  1  0  1 23  1 15
14  0  9 27 26  4  3  0  4
 3 25  0  0  1 23  0  1  4</textarea>
      </div>
      <p>Note that all of these can be used with an identifier and alternate name like these 3 count matrix motifs from Jaspar.
      <div>
        <textarea rows="6" cols="45" readonly>&gt;MA0001.1 SEP4
0   3   79  40  66  48  65  11  65  0
94  75  4   3   1   2   5   2   3   3
1   0   3   4   1   0   5   3   28  88
2   19  11  50  29  47  22  81  1   6
&gt;MA0002.1 RUNX1
10  12  4   1   2   2   0   0   0   8   13
2   2   7   1   0   8   0   0   1   2   2
3   1   1   0   23  0   26  26  0   0   4
11  11  14  24  1   16  0   0   25  16  7
&gt;MA0003.1 TFAP2A
0   0   0   22  19  55  53  19  9
0   185 185 71  57  44  30  16  78
185 0   0   46  61  67  91  137 79
0   0   0   46  48  19  11  13  19</textarea>
      </div>
      <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
    </div>

    <div class="pop_content" id="pop_input_motifs_filter">
      <p>When enabled this field supports selecting motifs from the file with a
      space separated list of motif identifiers and/or their positions in the
      file.</p>
      <p>Any numbers in the range 1 to 999 are assumed to refer to the position
      of the selected motif in the file, so the entry "3" always refers to the
      third motif.&ensp; Any other entry is assumed to be a motif identifier.</p>
      <p>Motif identifiers can not start with a dash and can only contain 
      alphanumeric characters as well as colon ':', underscore '_', dot '.'
      and dash '-'.</p>
      <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
    </div>

    <div class="pop_content" id="pop_input_motifs_db">
      <p>Select the desired motif database.</p>
      <p>Consult the <a href="../db/motifs">motif database documentation</a> 
      for descriptions of all the DNA, RNA and protein motif databases present on this
      MEME Suite server.</p>
      <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
    </div>
      
    <div class="pop_content" id="pop_input_motifs_xalph">
      <p>This option can help change the alphabet of motifs from
      a base alphabet to a derived alphabet.</p>
      <p>This might be useful if you need to compare an extended DNA motif with
      a library of DNA motifs, or if you wish to compare RNA motifs to DNA motifs.&ensp;
      Note that this option will also let you do nonsensical things like compare
      Protein motifs to DNA motifs so use it with care.</p>
      <p>The derived alphabet must have all the core symbols of the alphabet
      that it is derived from. For example if the alphabet is derived from DNA
      it must have ACGT as core symbols. Expanding the alphabet adds frequencies
      of zero for every symbol in the derived alphabet that did not exist in the
      base alphabet.</p>
      <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
    </div>

    <!--{/help}-->
    <form>
    <!--{component}-->
          <!-- ${prefix} -->
          <h2 class="meme"><!--{title}-->Input the motifs<!--{/title}--></h2>
          <div class="subcontent">
            <h4 class="meme"><!--{subtitle}-->Enter motifs you wish to scan with.<!--{/subtitle}-->
            <div class="help" data-topic="pop_${prefix}"></div></h4>
            <div class="motif_input text" id="${prefix}">
              <select class="motif_source meme" name="${prefix}_source">
                <optgroup label="User supplied">
                  <!--{text_option}-->
                  <option value="text" XXXXselectedXXXX>Type in motifs</option>
                  <!--{/text_option}-->
                  <!--{file_option}-->
                  <option value="file" XXXXselectedXXXX>Upload motifs</option>
                  <!--{/file_option}-->
                  <!--{embed_option}-->
                  <option value="embed" XXXXselectedXXXX>Submitted motifs</option>
                  <!--{/embed_option}-->
                </optgroup>
                <!--{cat_options}-->
                <optgroup label="Databases (select category)">
                  <!--{cat_option}-->
                  <option value="${id}" XXXXselectedXXXX>${name}</option>
                  <!--{/cat_option}-->
                </optgroup>
                <!--{/cat_options}-->
              </select>
              <span class="motif_file motif_debug">
                <span class="background"></span>
                <span class="indicator"></span>
                <input type="file" class="meme" name="${prefix}_file"/>
                <div class="popup"></div>
              </span>
              <select class="motif_text_alphabet meme" name="${prefix}_alphabet">
                <option value="DNA">DNA</option>
                <option value="RNA">RNA</option>
                <option value="PROTEIN">Protein</option>
                <option value="custom">Custom</option>
              </select>
              <span class="motif_text_alphabet_file motif_debug">
                <span class="background"></span>
                <span class="indicator" style="width: 100%"></span>
                <input type="file" class="meme" name="${prefix}_alphabet_file"/>
                <div class="popup"></div>
              </span>
              <span class="motif_alphabet_info"></span>
              <!--{embed_section}-->
              <span class="motif_embed">
                <input type="hidden" class="name" name="${prefix}_name" value="${name}">
                <input type="hidden" class="data" name="${prefix}_embed" value="${data}">
              </span>
              <!--{/embed_section}-->
              <div class="help" data-topic="pop_input_motifs"></div>
              <div class="motif_text">
                <input type="hidden" name="${prefix}_text">
                <div>
                  <pre><span></span><br></pre>
                  <textarea spellcheck="false" wrap="off"></textarea>
                </div>
              </div>
              <!--{db_section}-->
              <div class="motif_db">
                <select class="listing meme" name="${prefix}_db_listing" disabled>
                  <optgroup label="Databases">
                  <option value="">...</option>
                  </optgroup>
                </select>
                <div class="help" data-topic="pop_input_motifs_db"></div>
              </div>
              <!--{/db_section}-->
              <!--{filter_section}-->
              <div class="motif_filter enabopt">
              <input type="checkbox" value="1" name="${prefix}_filter_on">
              <label for="${prefix}_filter">Only select motif(s): </label>
              <input type="text" class="meme" name="${prefix}_filter" id="${prefix}_filter" value="1">
              <div class="help" data-topic="pop_input_motifs_filter"></div>
              </div>
              <!--{/filter_section}-->
              <!--{xalph_section}-->
              <div class="motif_xalph">
              <input type="checkbox" value="1" name="${prefix}_xalph" id="${prefix}_xalph">
              <label for="${prefix}_xalph">Allow alphabet expansion</label>
              <div class="help" data-topic="pop_input_motifs_xalph"></div>
              </div>
              <!--{/xalph_section}-->
              <script>
                (function() {
                  "use strict";
                  var options = XXXXoptionsXXXX;
                  var element = document.getElementById("${prefix}");
                  var controler = new MotifInput(element, options);
                  XXXXregister_componentXXXX("${prefix}", element, controler);
                })();
              </script>
            </div>
          </div>
          <!-- /${prefix} -->
    <!--{/component}-->
    <input type="submit" value="Test Submit Validation">
    </form>
  </body>
</html>

