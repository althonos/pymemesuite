name: Test

on:
  - push
  - pull_request

jobs:

  test_linux:
    name: Test (Linux)
    runs-on: ubuntu-latest
    env:
      OS: Linux
    strategy:
      matrix:
        include:
        - python-version: 3.8
          python-release: v3.8
          python-impl: CPython
        - python-version: 3.9
          python-release: v3.9
          python-impl: CPython
        - python-version: '3.10'
          python-release: 'v3.10'
          python-impl: CPython
        - python-version: '3.11'
          python-release: 'v3.11'
          python-impl: CPython
        - python-version: '3.12'
          python-release: 'v3.12'
          python-impl: CPython
        - python-version: '3.13'
          python-release: 'v3.13'
          python-impl: CPython
        - python-version: pypy-3.8
          python-release: v3.8
          python-impl: PyPy
        - python-version: pypy-3.9
          python-release: v3.9
          python-impl: PyPy
        - python-version: pypy-3.10
          python-release: v3.10
          python-impl: PyPy
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Show Python build environment
      run: python -m sysconfig
    - name: Update pip
      run: python -m pip install -U pip wheel setuptools
    - name: Install Python requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build C extension
      run: pip install -vv -e . --no-build-isolation
    - name: Install test requirements
      run: python -m pip install -r pymemesuite/tests/requirements.txt
    - name: Test with coverage
      run: python -m coverage run -m unittest pymemesuite.tests -vv
    - name: Upload to Codecov
      if: matrix.python-impl == 'CPython'
      uses: codecov/codecov-action@v3
      with:
        flags: ${{ matrix.python-release }}
        env_vars: OS
        name: test-python-${{ matrix.python-version }}
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true

  test_osx:
    name: Test (OSX)
    runs-on: macos-latest
    env:
      OS: OSX
    strategy:
      matrix:
        include:
        - python-version: 3.8
          python-release: v3.8
          python-impl: CPython
        - python-version: 3.9
          python-release: v3.9
          python-impl: CPython
        - python-version: '3.10'
          python-release: 'v3.10'
          python-impl: CPython
        - python-version: '3.11'
          python-release: 'v3.11'
          python-impl: CPython
        - python-version: '3.12'
          python-release: 'v3.12'
          python-impl: CPython
        - python-version: '3.13'
          python-release: 'v3.13'
          python-impl: CPython
        - python-version: pypy-3.8
          python-release: v3.8
          python-impl: PyPy
        - python-version: pypy-3.9
          python-release: v3.9
          python-impl: PyPy
        - python-version: pypy-3.10
          python-release: v3.10
          python-impl: PyPy
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Show Python build environment
      run: python -m sysconfig
    - name: Update pip
      run: python -m pip install -U pip wheel setuptools
    - name: Install Python requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build C extension
      run: pip install -vv -e . --no-build-isolation
    - name: Install test requirements
      run: python -m pip install -r pymemesuite/tests/requirements.txt
      if: matrix.python-impl == 'CPython'
    - name: Test without coverage
      run: python -m unittest pymemesuite.tests -vv
