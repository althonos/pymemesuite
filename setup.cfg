# https://gist.github.com/althonos/6914b896789d3f2078d1e6237642c35c

# --- Setuptools metadata ---------------------------------------------------

[metadata]
name = pymemesuite
version = attr: pymemesuite.__version__
author = Martin Larralde
author_email = martin.larralde@embl.de
url = https://github.com/althonos/pymemesuite
description = Cython bindings and Python interface to the MEME suite.
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT
platform = posix
keywords = bioinformatics, motif, sequence, enrichment, logo
classifier =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: POSIX
    Programming Language :: C
    Programming Language :: Cython
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Scientific/Engineering :: Medical Science Apps.
    Typing :: Typed
project_urls =
    # Documentation = https://pymemesuite.readthedocs.io/en/stable/
    Bug Tracker = https://github.com/althonos/pymemesuite/issues
    Changelog = https://github.com/althonos/pymemesuite/blob/master/CHANGELOG.md
    Coverage = https://codecov.io/gh/althonos/pymemesuite/
    Builds = https://github.com/althonos/pymemesuite/actions
    PyPI = https://pypi.org/project/pymemesuite

[options]
zip_safe = false
packages = pymemesuite
python_requires = >=3.6
test_suite = tests
include_package_data = true
setup_requires =
    setuptools >=46.4
    cython ~=0.29.16

[options.package_data]
pymemesuite = py.typed, *.pyi


# --- C libraries configuration ---------------------------------------------

[configure.xml2]
filename = config.h
headers =
    ctype.h
    dl.h
    dlfcn.h
    errno.h
    float.h
    fnctl.h
    limits.h
    malloc.h
    math.h
    netdb.h
    poll.h
    resolv.h
    signal.h
    stdint.h
    stdlib.h
    strings.h
    sys/select.h
    sys/socket.h
    sys/stat.h
    sys/time.h
    sys/types.h
    time.h
    unistd.h
functions =
    isinf
    isnan
    localtime
    strftime
    stat

[configure.xslt]
filename = config.h
headers =
    ctype.h
    stdlib.h
    stdarg.h
    malloc.h
    time.h
    math.h
    fcntl.h
    sys/stat.h
    string.h
functions =
    isinf
    isnan
    localtime
    gmtime

[configure.meme]
filename = config.h
constants =
    REVISION         = "85e92e5f19b20c2557895c8f98f933c870ccf7a4"
    ARCHIVE_DATE     = "Sat Aug 21 19:23:23 2021 -0700"
    VERSION          = "5.4.1"
    PACKAGE          = "meme"
    PACKAGE_NAME     = "meme"
    PACKAGE_STRING   = "meme 5.4.1"
    PACKAGE_TARNAME  = "meme"
    CONVERT_PATH     = "/usr/bin/convert"
    GHOSTSCRIPT_PATH = "/usr/bin/gs"
    SITE_URL         = "https://meme-suite.org/meme"
    SOURCE_URL       = "https://meme-suite.org"
    STDC_HEADERS     = 1
headers =
    arpa/inet.h
    ctype.h
    dlfcn.h
    fcntl.h
    float.h
    inttypes.h
    limits.h
    math.h
    memory.h
    netdb.h
    netinet/in.h
    stdbool.h
    stdint.h
    stdlib.h
    strings.h
    string.h
    sys/socket.h
    sys/stat.h
    sys/time.h
    sys/types.h
    sys/wait.h
    unistd.h
    vfork.h
functions =
    floor
    fork
    getcwd
    gethostbyname
    isascii
    malloc
    memset
    pow
    realloc
    rint
    socket
    sqrt
    strchr
    strcspn
    strdup
    strlcpy
    strspn
    strstr
    vfork

# --- Python tools configuration --------------------------------------------

[coverage:run]
plugins = Cython.Coverage

[coverage:report]
include = pymemesuite/*.pyx
show_missing = true
exclude_lines =
    pragma: no cover
    if typing.TYPE_CHECKING:
    @abc.abstractmethod
    @abc.abstractproperty
    raise NotImplementedError
    return NotImplemented
    raise UnexpectedError
    raise AllocationError

[mypy]
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_return_any = true
